# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Shuveb Hussain
# This file is distributed under the same license as the Lord of the
# io_uring package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Lord of the io_uring \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-24 23:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorial/fixed_buffers.rst:5
msgid "Fixed buffers"
msgstr ""

#: ../../tutorial/fixed_buffers.rst:6
msgid ""
"The idea with using fixed buffers is this: you provide a set of buffers "
"you describe with an array of ``iovec`` structures and register them with"
" the kernel using :c:func:`io_uring_register_buffers`. This causes the "
"kernel to map these buffers in, avoiding future copies to and from user "
"space. You can then use the \"fixed buffer\" functions like "
":c:func:`io_uring_prep_write_fixed` and "
":c:func:`io_uring_prep_read_fixed` specifying the index of the buffer you"
" want to use."
msgstr ""

#: ../../tutorial/fixed_buffers.rst:129
msgid "How it works"
msgstr ""

#: ../../tutorial/fixed_buffers.rst:130
msgid ""
"We allocate 4 buffers via :man:`malloc(3)` and then register them with "
"the kernel with the :c:func:`io_uring_register_buffers` function. The "
"``iovec`` structure describes each array by holding a base address and "
"the size of the allocated buffer. We use an array of ``iovec`` structures"
" 4 elements long to hold details about the 4 arrays we need."
msgstr ""

#: ../../tutorial/fixed_buffers.rst:132
msgid ""
"This program is just a simple demonstration of how to use fixed buffers "
"and as such does not to anything more useful beyond that. But it does "
"serve to remind you about `the poem Leisure "
"<https://en.wikipedia.org/wiki/Leisure_(poem)>`_ by W.H Davies, though. "
"Two strings are written using two fixed write operations "
"(:c:func:`io_uring_prep_write_fixed`) to a file using buffers in indices "
"0 and 1. Later, we read the file using two fixed read operations "
"(:c:func:`io_uring_prep_read_fixed`) this time using buffer indices 2 and"
" 3. We then print the results of these reads."
msgstr ""

#: ../../tutorial/fixed_buffers.rst:134
msgid "You can see how the output of this program looks like below:"
msgstr ""

#: ../../tutorial/fixed_buffers.rst:149
msgid "Source code"
msgstr ""

#: ../../tutorial/fixed_buffers.rst:150
msgid ""
"Source code for this and other examples is `available on Github "
"<https://github.com/shuveb/loti-examples>`_."
msgstr ""

